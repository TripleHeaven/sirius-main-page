{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ilya/workReact/currentcurrentProject/components/Graph.tsx\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\"; // import styled from \"@emotion/styled/macro\";\n\nexport default function Graph({\n  picAdress\n}) {\n  // styles\n  const {\n    0: chartData,\n    1: setChartData\n  } = useState({});\n  const {\n    0: currentIncome,\n    1: setIncome\n  } = useState(0);\n\n  const chart = () => {\n    const getRandomInt = (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n    };\n\n    const generateRandomData = () => {\n      let toReturn = [];\n      let incomeSum = 0;\n\n      for (let i = 0; i < 7; i++) {\n        toReturn.push(getRandomInt(1000, 6000));\n        incomeSum += toReturn[i];\n      }\n\n      setIncome(incomeSum);\n      return toReturn;\n    };\n\n    setChartData({\n      labels: [\"23 сен\", \"24 сен\", \"25 сен\", \"26 сен\", \"27 сен\", \"28 сен\", \"29 сен\"],\n      datasets: [{\n        label: \"Income\",\n        data: generateRandomData(),\n        borderColor: \"rgba(46,113,243,1)\",\n        backgroundColor: \"rgba(46,113,243,0.1)\",\n        borderWidth: 2,\n        pointStyle: \"circle\",\n        fill: true,\n        pointBackgroundColor: \"white\",\n        pointBorderWidth: 2,\n        pointRadius: 4,\n        pointHoverBorderColor: \"#ED0F48\",\n        hoverBackgroundColor: \"#FFFFFF\"\n      }]\n    });\n  };\n\n  const GraphContainer = _styled(\"div\", {\n    target: \"e11i6h3w11\",\n    label: \"GraphContainer\"\n  })(false ? {\n    name: \"obptkb\",\n    styles: \"height:200px;width:560px;margin-left:10px;margin-top:18px;background:#fff;z-index:0\"\n  } : {\n    name: \"obptkb\",\n    styles: \"height:200px;width:560px;margin-left:10px;margin-top:18px;background:#fff;z-index:0\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Container = _styled(\"div\", {\n    target: \"e11i6h3w10\",\n    label: \"Container\"\n  })(false ? {\n    name: \"1c0eyrh\",\n    styles: \"display:flex;flex-direction:column;width:575px;height:315px;background:#fff;font-family:\\\"Jost\\\"\"\n  } : {\n    name: \"1c0eyrh\",\n    styles: \"display:flex;flex-direction:column;width:575px;height:315px;background:#fff;font-family:\\\"Jost\\\"\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const HidingBlock = _styled(\"div\", {\n    target: \"e11i6h3w9\",\n    label: \"HidingBlock\"\n  })(false ? {\n    name: \"1rcaon6\",\n    styles: \"width:565px;height:225px;background:#fff;margin-top:-300px;z-index:100\"\n  } : {\n    name: \"1rcaon6\",\n    styles: \"width:565px;height:225px;background:#fff;margin-top:-300px;z-index:100\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const MainBlock = _styled(\"div\", {\n    target: \"e11i6h3w8\",\n    label: \"MainBlock\"\n  })(false ? {\n    name: \"yrf9ut\",\n    styles: \"width:600px\"\n  } : {\n    name: \"yrf9ut\",\n    styles: \"width:600px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const InfoContainer = _styled(\"div\", {\n    target: \"e11i6h3w7\",\n    label: \"InfoContainer\"\n  })(false ? {\n    name: \"caluc2\",\n    styles: \"display:grid;padding-left:20px;padding-top:20px;grid-template-columns:auto auto;grid-template-rows:auto auto\"\n  } : {\n    name: \"caluc2\",\n    styles: \"display:grid;padding-left:20px;padding-top:20px;grid-template-columns:auto auto;grid-template-rows:auto auto\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const BankPic = _styled(\"img\", {\n    target: \"e11i6h3w6\",\n    label: \"BankPic\"\n  })(false ? {\n    name: \"x9aii1\",\n    styles: \"grid-column-start:2;grid-column-end:3;grid-row-start:1;grid-row-end:3;display:flex;margin-left:auto;margin-right:20px\"\n  } : {\n    name: \"x9aii1\",\n    styles: \"grid-column-start:2;grid-column-end:3;grid-row-start:1;grid-row-end:3;display:flex;margin-left:auto;margin-right:20px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lseWEvd29ya1JlYWN0L2N1cnJlbnRjdXJyZW50UHJvamVjdC9jb21wb25lbnRzL0dyYXBoLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RjRCIiwiZmlsZSI6Ii9ob21lL2lseWEvd29ya1JlYWN0L2N1cnJlbnRjdXJyZW50UHJvamVjdC9jb21wb25lbnRzL0dyYXBoLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IHsgTk9OQU1FIH0gZnJvbSBcImRuc1wiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTGluZSB9IGZyb20gXCJyZWFjdC1jaGFydGpzLTJcIjtcbi8vIGltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZC9tYWNyb1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHcmFwaCh7IHBpY0FkcmVzcyB9OiB7IHBpY0FkcmVzczogc3RyaW5nIH0pIHtcbiAgLy8gc3R5bGVzXG4gIGNvbnN0IFtjaGFydERhdGEsIHNldENoYXJ0RGF0YV0gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFtjdXJyZW50SW5jb21lLCBzZXRJbmNvbWVdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IGNoYXJ0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGdldFJhbmRvbUludCA9IChtaW4sIG1heCkgPT4ge1xuICAgICAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gICAgICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW4pOyAvL1RoZSBtYXhpbXVtIGlzIGV4Y2x1c2l2ZSBhbmQgdGhlIG1pbmltdW0gaXMgaW5jbHVzaXZlXG4gICAgfTtcbiAgICBjb25zdCBnZW5lcmF0ZVJhbmRvbURhdGEgPSAoKSA9PiB7XG4gICAgICBsZXQgdG9SZXR1cm4gPSBbXTtcbiAgICAgIGxldCBpbmNvbWVTdW0gPSAwO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA3OyBpKyspIHtcbiAgICAgICAgdG9SZXR1cm4ucHVzaChnZXRSYW5kb21JbnQoMTAwMCwgNjAwMCkpO1xuICAgICAgICBpbmNvbWVTdW0gKz0gdG9SZXR1cm5baV07XG4gICAgICB9XG4gICAgICBzZXRJbmNvbWUoaW5jb21lU3VtKTtcbiAgICAgIHJldHVybiB0b1JldHVybjtcbiAgICB9O1xuICAgIHNldENoYXJ0RGF0YSh7XG4gICAgICBsYWJlbHM6IFtcbiAgICAgICAgXCIyMyDRgdC10L1cIixcbiAgICAgICAgXCIyNCDRgdC10L1cIixcbiAgICAgICAgXCIyNSDRgdC10L1cIixcbiAgICAgICAgXCIyNiDRgdC10L1cIixcbiAgICAgICAgXCIyNyDRgdC10L1cIixcbiAgICAgICAgXCIyOCDRgdC10L1cIixcbiAgICAgICAgXCIyOSDRgdC10L1cIixcbiAgICAgIF0sXG4gICAgICBkYXRhc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwiSW5jb21lXCIsXG4gICAgICAgICAgZGF0YTogZ2VuZXJhdGVSYW5kb21EYXRhKCksXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSg0NiwxMTMsMjQzLDEpXCIsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoNDYsMTEzLDI0MywwLjEpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgcG9pbnRTdHlsZTogXCJjaXJjbGVcIixcbiAgICAgICAgICBmaWxsOiB0cnVlLFxuICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICBwb2ludFJhZGl1czogNCxcbiAgICAgICAgICBwb2ludEhvdmVyQm9yZGVyQ29sb3I6IFwiI0VEMEY0OFwiLFxuICAgICAgICAgIGhvdmVyQmFja2dyb3VuZENvbG9yOiBcIiNGRkZGRkZcIixcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IEdyYXBoQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHdpZHRoOiA1NjBweDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxOHB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgei1pbmRleDogMDtcbiAgYDtcbiAgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDU3NXB4O1xuICAgIGhlaWdodDogMzE1cHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBmb250LWZhbWlseTogXCJKb3N0XCI7XG4gIGA7XG4gIGNvbnN0IEhpZGluZ0Jsb2NrID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNTY1cHg7XG4gICAgaGVpZ2h0OiAyMjVweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIG1hcmdpbi10b3A6IC0zMDBweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gIGA7XG4gIGNvbnN0IE1haW5CbG9jayA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDYwMHB4O1xuICBgO1xuICBjb25zdCBJbmZvQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgYDtcbiAgY29uc3QgQmFua1BpYyA9IHN0eWxlZC5pbWdgXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDI7XG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xuICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xuICAgIGdyaWQtcm93LWVuZDogMztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgYDtcbiAgY29uc3QgSW5jb21lTGFiZWwgPSBzdHlsZWQuZGl2YFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICAgIGdyaWQtY29sdW1uLWVuZDogMjtcbiAgICBncmlkLXJvdy1zdGFydDogMTtcbiAgICBncmlkLXJvdy1lbmQ6IDI7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGA7XG4gIGNvbnN0IEluY29tZVNpemUgPSBzdHlsZWQuZGl2YFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICAgIGdyaWQtY29sdW1uLWVuZDogMjtcbiAgICBncmlkLXJvdy1zdGFydDogMjtcbiAgICBncmlkLXJvdy1lbmQ6IDM7XG4gICAgZGlzcGxheTogZmxleDtcbiAgYDtcbiAgY29uc3QgSW5jb21lTnVtYmVyID0gc3R5bGVkLmRpdmBcbiAgICBmb250LXNpemU6IDI1cHg7XG4gIGA7XG4gIGNvbnN0IFJ1YiA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICBgO1xuICBjb25zdCBMaXR0bGVQaWMgPSBzdHlsZWQuaW1nYFxuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gIGA7XG4gIGNvbnN0IGZvcm1hdEluY29tZSA9ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgY3VycmVudEluY29tZS50b1N0cmluZygpLnNsaWNlKDAsIDIpICtcbiAgICAgIFwiIFwiICtcbiAgICAgIGN1cnJlbnRJbmNvbWUudG9TdHJpbmcoKS5zbGljZSgyLCBjdXJyZW50SW5jb21lLnRvU3RyaW5nKCkubGVuZ3RoKVxuICAgICk7XG4gIH07XG4gIGNvbnN0IE1haW5Db250YWluZXIgPSBzdHlsZWQuZGl2YGA7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2hhcnQoKTtcbiAgfSwgW10pO1xuICByZXR1cm4gKFxuICAgIDxNYWluQ29udGFpbmVyPlxuICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgPEluZm9Db250YWluZXI+XG4gICAgICAgICAgPEluY29tZUxhYmVsPtCS0YvRgNGD0YfQutCwOjwvSW5jb21lTGFiZWw+XG4gICAgICAgICAgPEluY29tZVNpemU+XG4gICAgICAgICAgICA8SW5jb21lTnVtYmVyPntmb3JtYXRJbmNvbWUoKX08L0luY29tZU51bWJlcj5cbiAgICAgICAgICAgIDxSdWI+0YDRg9CxPC9SdWI+XG4gICAgICAgICAgICA8TGl0dGxlUGljIHNyYz1cIi9saWxJbmNyZWFzZS5wbmdcIj48L0xpdHRsZVBpYz5cbiAgICAgICAgICA8L0luY29tZVNpemU+XG4gICAgICAgICAgPEJhbmtQaWMgc3JjPXtwaWNBZHJlc3N9PjwvQmFua1BpYz5cbiAgICAgICAgPC9JbmZvQ29udGFpbmVyPlxuICAgICAgICA8R3JhcGhDb250YWluZXI+XG4gICAgICAgICAgPExpbmVcbiAgICAgICAgICAgIGRhdGE9e2NoYXJ0RGF0YX1cbiAgICAgICAgICAgIG9wdGlvbnM9e3tcbiAgICAgICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzOiB7XG4gICAgICAgICAgICAgICAgICB0aXRsZTogZnVuY3Rpb24gKHRvb2x0aXBJdGVtLCBkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgXCLQktGL0YDRg9GH0LrQsCDQt9CwIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhW1wibGFiZWxzXCJdW3Rvb2x0aXBJdGVtWzBdW1wiaW5kZXhcIl1dICtcbiAgICAgICAgICAgICAgICAgICAgICBcIjpcIlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGxhYmVsOiBmdW5jdGlvbiAodG9vbHRpcEl0ZW0sIGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhW1wiZGF0YXNldHNcIl1bMF1bXCJkYXRhXCJdW3Rvb2x0aXBJdGVtW1wiaW5kZXhcIl1dICsgXCIg0YDRg9CxXCJcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI0ZGRlwiLFxuICAgICAgICAgICAgICAgIHRpdGxlRm9udEZhbWlseTogXCJKb3N0XCIsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250U2l6ZTogMTAsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250U3R5bGU6IFwibm9ybWFsXCIsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwicmdiYSgwLDAsMCwwLjQpXCIsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250V2lkdGg6IDEwMCxcbiAgICAgICAgICAgICAgICBib2R5Rm9udENvbG9yOiBcIiMwMDBcIixcbiAgICAgICAgICAgICAgICBib2R5Rm9udFNpemU6IDEyLFxuICAgICAgICAgICAgICAgIGJvZHlGb250RmFtaWx5OiBcIkpvc3RcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3JzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB4UGFkZGluZzogMTMsXG4gICAgICAgICAgICAgICAgeVBhZGRpbmc6IDEzLFxuICAgICAgICAgICAgICAgIGNvcm5lclJhZGl1czogMCxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgbGVnZW5kOiB7IGRpc3BsYXk6IGZhbHNlIH0sXG4gICAgICAgICAgICAgIHNjYWxlczoge1xuICAgICAgICAgICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJKb3N0XCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgsIHZhbHVlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID4gNTAwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSAvIDEwMDAgKyBcIiDRgtGL0YEuIOKCvVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgbWF4VGlja3NMaW1pdDogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgc3RlcFNpemU6IDEwMDAsXG4gICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJKb3N0XCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgejogLTEwMCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge1wiIFwifVxuICAgICAgICAgIDwvTGluZT5cbiAgICAgICAgPC9HcmFwaENvbnRhaW5lcj5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvTWFpbkNvbnRhaW5lcj5cbiAgKTtcbn1cbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IncomeLabel = _styled(\"div\", {\n    target: \"e11i6h3w5\",\n    label: \"IncomeLabel\"\n  })(false ? {\n    name: \"109gjet\",\n    styles: \"grid-column-start:1;grid-column-end:2;grid-row-start:1;grid-row-end:2;font-size:13px;color:rgba(0, 0, 0, 0.5)\"\n  } : {\n    name: \"109gjet\",\n    styles: \"grid-column-start:1;grid-column-end:2;grid-row-start:1;grid-row-end:2;font-size:13px;color:rgba(0, 0, 0, 0.5)\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lseWEvd29ya1JlYWN0L2N1cnJlbnRjdXJyZW50UHJvamVjdC9jb21wb25lbnRzL0dyYXBoLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnR2dDIiwiZmlsZSI6Ii9ob21lL2lseWEvd29ya1JlYWN0L2N1cnJlbnRjdXJyZW50UHJvamVjdC9jb21wb25lbnRzL0dyYXBoLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IHsgTk9OQU1FIH0gZnJvbSBcImRuc1wiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTGluZSB9IGZyb20gXCJyZWFjdC1jaGFydGpzLTJcIjtcbi8vIGltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZC9tYWNyb1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHcmFwaCh7IHBpY0FkcmVzcyB9OiB7IHBpY0FkcmVzczogc3RyaW5nIH0pIHtcbiAgLy8gc3R5bGVzXG4gIGNvbnN0IFtjaGFydERhdGEsIHNldENoYXJ0RGF0YV0gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFtjdXJyZW50SW5jb21lLCBzZXRJbmNvbWVdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IGNoYXJ0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGdldFJhbmRvbUludCA9IChtaW4sIG1heCkgPT4ge1xuICAgICAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gICAgICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW4pOyAvL1RoZSBtYXhpbXVtIGlzIGV4Y2x1c2l2ZSBhbmQgdGhlIG1pbmltdW0gaXMgaW5jbHVzaXZlXG4gICAgfTtcbiAgICBjb25zdCBnZW5lcmF0ZVJhbmRvbURhdGEgPSAoKSA9PiB7XG4gICAgICBsZXQgdG9SZXR1cm4gPSBbXTtcbiAgICAgIGxldCBpbmNvbWVTdW0gPSAwO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA3OyBpKyspIHtcbiAgICAgICAgdG9SZXR1cm4ucHVzaChnZXRSYW5kb21JbnQoMTAwMCwgNjAwMCkpO1xuICAgICAgICBpbmNvbWVTdW0gKz0gdG9SZXR1cm5baV07XG4gICAgICB9XG4gICAgICBzZXRJbmNvbWUoaW5jb21lU3VtKTtcbiAgICAgIHJldHVybiB0b1JldHVybjtcbiAgICB9O1xuICAgIHNldENoYXJ0RGF0YSh7XG4gICAgICBsYWJlbHM6IFtcbiAgICAgICAgXCIyMyDRgdC10L1cIixcbiAgICAgICAgXCIyNCDRgdC10L1cIixcbiAgICAgICAgXCIyNSDRgdC10L1cIixcbiAgICAgICAgXCIyNiDRgdC10L1cIixcbiAgICAgICAgXCIyNyDRgdC10L1cIixcbiAgICAgICAgXCIyOCDRgdC10L1cIixcbiAgICAgICAgXCIyOSDRgdC10L1cIixcbiAgICAgIF0sXG4gICAgICBkYXRhc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwiSW5jb21lXCIsXG4gICAgICAgICAgZGF0YTogZ2VuZXJhdGVSYW5kb21EYXRhKCksXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSg0NiwxMTMsMjQzLDEpXCIsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoNDYsMTEzLDI0MywwLjEpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgcG9pbnRTdHlsZTogXCJjaXJjbGVcIixcbiAgICAgICAgICBmaWxsOiB0cnVlLFxuICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICBwb2ludFJhZGl1czogNCxcbiAgICAgICAgICBwb2ludEhvdmVyQm9yZGVyQ29sb3I6IFwiI0VEMEY0OFwiLFxuICAgICAgICAgIGhvdmVyQmFja2dyb3VuZENvbG9yOiBcIiNGRkZGRkZcIixcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IEdyYXBoQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIHdpZHRoOiA1NjBweDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxOHB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgei1pbmRleDogMDtcbiAgYDtcbiAgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDU3NXB4O1xuICAgIGhlaWdodDogMzE1cHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBmb250LWZhbWlseTogXCJKb3N0XCI7XG4gIGA7XG4gIGNvbnN0IEhpZGluZ0Jsb2NrID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNTY1cHg7XG4gICAgaGVpZ2h0OiAyMjVweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIG1hcmdpbi10b3A6IC0zMDBweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gIGA7XG4gIGNvbnN0IE1haW5CbG9jayA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDYwMHB4O1xuICBgO1xuICBjb25zdCBJbmZvQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgYDtcbiAgY29uc3QgQmFua1BpYyA9IHN0eWxlZC5pbWdgXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDI7XG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xuICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xuICAgIGdyaWQtcm93LWVuZDogMztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgYDtcbiAgY29uc3QgSW5jb21lTGFiZWwgPSBzdHlsZWQuZGl2YFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICAgIGdyaWQtY29sdW1uLWVuZDogMjtcbiAgICBncmlkLXJvdy1zdGFydDogMTtcbiAgICBncmlkLXJvdy1lbmQ6IDI7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGA7XG4gIGNvbnN0IEluY29tZVNpemUgPSBzdHlsZWQuZGl2YFxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICAgIGdyaWQtY29sdW1uLWVuZDogMjtcbiAgICBncmlkLXJvdy1zdGFydDogMjtcbiAgICBncmlkLXJvdy1lbmQ6IDM7XG4gICAgZGlzcGxheTogZmxleDtcbiAgYDtcbiAgY29uc3QgSW5jb21lTnVtYmVyID0gc3R5bGVkLmRpdmBcbiAgICBmb250LXNpemU6IDI1cHg7XG4gIGA7XG4gIGNvbnN0IFJ1YiA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICBgO1xuICBjb25zdCBMaXR0bGVQaWMgPSBzdHlsZWQuaW1nYFxuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gIGA7XG4gIGNvbnN0IGZvcm1hdEluY29tZSA9ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgY3VycmVudEluY29tZS50b1N0cmluZygpLnNsaWNlKDAsIDIpICtcbiAgICAgIFwiIFwiICtcbiAgICAgIGN1cnJlbnRJbmNvbWUudG9TdHJpbmcoKS5zbGljZSgyLCBjdXJyZW50SW5jb21lLnRvU3RyaW5nKCkubGVuZ3RoKVxuICAgICk7XG4gIH07XG4gIGNvbnN0IE1haW5Db250YWluZXIgPSBzdHlsZWQuZGl2YGA7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2hhcnQoKTtcbiAgfSwgW10pO1xuICByZXR1cm4gKFxuICAgIDxNYWluQ29udGFpbmVyPlxuICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgPEluZm9Db250YWluZXI+XG4gICAgICAgICAgPEluY29tZUxhYmVsPtCS0YvRgNGD0YfQutCwOjwvSW5jb21lTGFiZWw+XG4gICAgICAgICAgPEluY29tZVNpemU+XG4gICAgICAgICAgICA8SW5jb21lTnVtYmVyPntmb3JtYXRJbmNvbWUoKX08L0luY29tZU51bWJlcj5cbiAgICAgICAgICAgIDxSdWI+0YDRg9CxPC9SdWI+XG4gICAgICAgICAgICA8TGl0dGxlUGljIHNyYz1cIi9saWxJbmNyZWFzZS5wbmdcIj48L0xpdHRsZVBpYz5cbiAgICAgICAgICA8L0luY29tZVNpemU+XG4gICAgICAgICAgPEJhbmtQaWMgc3JjPXtwaWNBZHJlc3N9PjwvQmFua1BpYz5cbiAgICAgICAgPC9JbmZvQ29udGFpbmVyPlxuICAgICAgICA8R3JhcGhDb250YWluZXI+XG4gICAgICAgICAgPExpbmVcbiAgICAgICAgICAgIGRhdGE9e2NoYXJ0RGF0YX1cbiAgICAgICAgICAgIG9wdGlvbnM9e3tcbiAgICAgICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzOiB7XG4gICAgICAgICAgICAgICAgICB0aXRsZTogZnVuY3Rpb24gKHRvb2x0aXBJdGVtLCBkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgXCLQktGL0YDRg9GH0LrQsCDQt9CwIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhW1wibGFiZWxzXCJdW3Rvb2x0aXBJdGVtWzBdW1wiaW5kZXhcIl1dICtcbiAgICAgICAgICAgICAgICAgICAgICBcIjpcIlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGxhYmVsOiBmdW5jdGlvbiAodG9vbHRpcEl0ZW0sIGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhW1wiZGF0YXNldHNcIl1bMF1bXCJkYXRhXCJdW3Rvb2x0aXBJdGVtW1wiaW5kZXhcIl1dICsgXCIg0YDRg9CxXCJcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI0ZGRlwiLFxuICAgICAgICAgICAgICAgIHRpdGxlRm9udEZhbWlseTogXCJKb3N0XCIsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250U2l6ZTogMTAsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250U3R5bGU6IFwibm9ybWFsXCIsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwicmdiYSgwLDAsMCwwLjQpXCIsXG4gICAgICAgICAgICAgICAgdGl0bGVGb250V2lkdGg6IDEwMCxcbiAgICAgICAgICAgICAgICBib2R5Rm9udENvbG9yOiBcIiMwMDBcIixcbiAgICAgICAgICAgICAgICBib2R5Rm9udFNpemU6IDEyLFxuICAgICAgICAgICAgICAgIGJvZHlGb250RmFtaWx5OiBcIkpvc3RcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3JzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB4UGFkZGluZzogMTMsXG4gICAgICAgICAgICAgICAgeVBhZGRpbmc6IDEzLFxuICAgICAgICAgICAgICAgIGNvcm5lclJhZGl1czogMCxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgbGVnZW5kOiB7IGRpc3BsYXk6IGZhbHNlIH0sXG4gICAgICAgICAgICAgIHNjYWxlczoge1xuICAgICAgICAgICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJKb3N0XCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgsIHZhbHVlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID4gNTAwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSAvIDEwMDAgKyBcIiDRgtGL0YEuIOKCvVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgbWF4VGlja3NMaW1pdDogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgc3RlcFNpemU6IDEwMDAsXG4gICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJKb3N0XCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgejogLTEwMCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge1wiIFwifVxuICAgICAgICAgIDwvTGluZT5cbiAgICAgICAgPC9HcmFwaENvbnRhaW5lcj5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvTWFpbkNvbnRhaW5lcj5cbiAgKTtcbn1cbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IncomeSize = _styled(\"div\", {\n    target: \"e11i6h3w4\",\n    label: \"IncomeSize\"\n  })(false ? {\n    name: \"17pl6a5\",\n    styles: \"grid-column-start:1;grid-column-end:2;grid-row-start:2;grid-row-end:3;display:flex\"\n  } : {\n    name: \"17pl6a5\",\n    styles: \"grid-column-start:1;grid-column-end:2;grid-row-start:2;grid-row-end:3;display:flex\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IncomeNumber = _styled(\"div\", {\n    target: \"e11i6h3w3\",\n    label: \"IncomeNumber\"\n  })(false ? {\n    name: \"1d5d9s7\",\n    styles: \"font-size:25px\"\n  } : {\n    name: \"1d5d9s7\",\n    styles: \"font-size:25px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Rub = _styled(\"div\", {\n    target: \"e11i6h3w2\",\n    label: \"Rub\"\n  })(false ? {\n    name: \"vz6do4\",\n    styles: \"margin-top:8px;margin-left:5px;font-size:18px\"\n  } : {\n    name: \"vz6do4\",\n    styles: \"margin-top:8px;margin-left:5px;font-size:18px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const LittlePic = _styled(\"img\", {\n    target: \"e11i6h3w1\",\n    label: \"LittlePic\"\n  })(false ? {\n    name: \"32zmbs\",\n    styles: \"margin-top:12px;margin-left:3px;height:20px\"\n  } : {\n    name: \"32zmbs\",\n    styles: \"margin-top:12px;margin-left:3px;height:20px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const formatIncome = () => {\n    return currentIncome.toString().slice(0, 2) + \" \" + currentIncome.toString().slice(2, currentIncome.toString().length);\n  };\n\n  const MainContainer = _styled(\"div\", {\n    target: \"e11i6h3w0\",\n    label: \"MainContainer\"\n  })(false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IncomeLabel, {\n          children: \"\\u0412\\u044B\\u0440\\u0443\\u0447\\u043A\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IncomeSize, {\n          children: [/*#__PURE__*/_jsxDEV(IncomeNumber, {\n            children: formatIncome()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Rub, {\n            children: \"\\u0440\\u0443\\u0431\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LittlePic, {\n            src: \"/lilIncrease.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BankPic, {\n          src: picAdress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphContainer, {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            tooltips: {\n              callbacks: {\n                title: function (tooltipItem, data) {\n                  return \"Выручка за \" + data[\"labels\"][tooltipItem[0][\"index\"]] + \":\";\n                },\n                label: function (tooltipItem, data) {\n                  return data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] + \" руб\";\n                }\n              },\n              backgroundColor: \"#FFF\",\n              titleFontFamily: \"Jost\",\n              titleFontSize: 10,\n              titleFontStyle: \"normal\",\n              titleFontColor: \"rgba(0,0,0,0.4)\",\n              titleFontWidth: 100,\n              bodyFontColor: \"#000\",\n              bodyFontSize: 12,\n              bodyFontFamily: \"Jost\",\n              displayColors: false,\n              xPadding: 13,\n              yPadding: 13,\n              cornerRadius: 0\n            },\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                ticks: {\n                  display: true,\n                  drawBorder: false,\n                  fontSize: 12,\n                  padding: 10,\n                  fontFamily: \"Jost\"\n                },\n                gridLines: {\n                  display: false,\n                  drawBorder: false\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  display: true,\n                  padding: 10,\n                  fontSize: 12,\n                  callback: function (value, index, values) {\n                    if (value > 5000) {\n                      return \"\";\n                    } else {\n                      return value / 1000 + \" тыс. ₽\";\n                    }\n                  },\n                  maxTicksLimit: 10,\n                  stepSize: 1000,\n                  fontFamily: \"Jost\"\n                },\n                gridLines: {\n                  display: true,\n                  drawBorder: false,\n                  z: -100\n                }\n              }]\n            }\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ilya/workReact/currentcurrentProject/components/Graph.tsx"],"names":["useEffect","useState","Line","Graph","picAdress","chartData","setChartData","currentIncome","setIncome","chart","getRandomInt","min","max","Math","ceil","floor","random","generateRandomData","toReturn","incomeSum","i","push","labels","datasets","label","data","borderColor","backgroundColor","borderWidth","pointStyle","fill","pointBackgroundColor","pointBorderWidth","pointRadius","pointHoverBorderColor","hoverBackgroundColor","GraphContainer","Container","HidingBlock","MainBlock","InfoContainer","BankPic","IncomeLabel","IncomeSize","IncomeNumber","Rub","LittlePic","formatIncome","toString","slice","length","MainContainer","responsive","maintainAspectRatio","tooltips","callbacks","title","tooltipItem","titleFontFamily","titleFontSize","titleFontStyle","titleFontColor","titleFontWidth","bodyFontColor","bodyFontSize","bodyFontFamily","displayColors","xPadding","yPadding","cornerRadius","legend","display","scales","xAxes","ticks","drawBorder","fontSize","padding","fontFamily","gridLines","yAxes","callback","value","index","values","maxTicksLimit","stepSize","z"],"mappings":"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","sourcesContent":["import styled from \"@emotion/styled\";\nimport { NONAME } from \"dns\";\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n// import styled from \"@emotion/styled/macro\";\n\nexport default function Graph({ picAdress }: { picAdress: string }) {\n  // styles\n  const [chartData, setChartData] = useState({});\n  const [currentIncome, setIncome] = useState(0);\n  const chart = () => {\n    const getRandomInt = (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n    };\n    const generateRandomData = () => {\n      let toReturn = [];\n      let incomeSum = 0;\n      for (let i = 0; i < 7; i++) {\n        toReturn.push(getRandomInt(1000, 6000));\n        incomeSum += toReturn[i];\n      }\n      setIncome(incomeSum);\n      return toReturn;\n    };\n    setChartData({\n      labels: [\n        \"23 сен\",\n        \"24 сен\",\n        \"25 сен\",\n        \"26 сен\",\n        \"27 сен\",\n        \"28 сен\",\n        \"29 сен\",\n      ],\n      datasets: [\n        {\n          label: \"Income\",\n          data: generateRandomData(),\n          borderColor: \"rgba(46,113,243,1)\",\n          backgroundColor: \"rgba(46,113,243,0.1)\",\n          borderWidth: 2,\n          pointStyle: \"circle\",\n          fill: true,\n          pointBackgroundColor: \"white\",\n          pointBorderWidth: 2,\n          pointRadius: 4,\n          pointHoverBorderColor: \"#ED0F48\",\n          hoverBackgroundColor: \"#FFFFFF\",\n        },\n      ],\n    });\n  };\n  const GraphContainer = styled.div`\n    height: 200px;\n    width: 560px;\n    margin-left: 10px;\n    margin-top: 18px;\n    background: #fff;\n    z-index: 0;\n  `;\n  const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 575px;\n    height: 315px;\n    background: #fff;\n    font-family: \"Jost\";\n  `;\n  const HidingBlock = styled.div`\n    width: 565px;\n    height: 225px;\n    background: #fff;\n    margin-top: -300px;\n    z-index: 100;\n  `;\n  const MainBlock = styled.div`\n    width: 600px;\n  `;\n  const InfoContainer = styled.div`\n    display: grid;\n    padding-left: 20px;\n    padding-top: 20px;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto auto;\n  `;\n  const BankPic = styled.img`\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 3;\n    display: flex;\n    margin-left: auto;\n    margin-right: 20px;\n  `;\n  const IncomeLabel = styled.div`\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    font-size: 13px;\n    color: rgba(0, 0, 0, 0.5);\n  `;\n  const IncomeSize = styled.div`\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n    display: flex;\n  `;\n  const IncomeNumber = styled.div`\n    font-size: 25px;\n  `;\n  const Rub = styled.div`\n    margin-top: 8px;\n    margin-left: 5px;\n    font-size: 18px;\n  `;\n  const LittlePic = styled.img`\n    margin-top: 12px;\n    margin-left: 3px;\n    height: 20px;\n  `;\n  const formatIncome = () => {\n    return (\n      currentIncome.toString().slice(0, 2) +\n      \" \" +\n      currentIncome.toString().slice(2, currentIncome.toString().length)\n    );\n  };\n  const MainContainer = styled.div``;\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <MainContainer>\n      <Container>\n        <InfoContainer>\n          <IncomeLabel>Выручка:</IncomeLabel>\n          <IncomeSize>\n            <IncomeNumber>{formatIncome()}</IncomeNumber>\n            <Rub>руб</Rub>\n            <LittlePic src=\"/lilIncrease.png\"></LittlePic>\n          </IncomeSize>\n          <BankPic src={picAdress}></BankPic>\n        </InfoContainer>\n        <GraphContainer>\n          <Line\n            data={chartData}\n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n              tooltips: {\n                callbacks: {\n                  title: function (tooltipItem, data) {\n                    return (\n                      \"Выручка за \" +\n                      data[\"labels\"][tooltipItem[0][\"index\"]] +\n                      \":\"\n                    );\n                  },\n                  label: function (tooltipItem, data) {\n                    return (\n                      data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] + \" руб\"\n                    );\n                  },\n                },\n                backgroundColor: \"#FFF\",\n                titleFontFamily: \"Jost\",\n                titleFontSize: 10,\n                titleFontStyle: \"normal\",\n                titleFontColor: \"rgba(0,0,0,0.4)\",\n                titleFontWidth: 100,\n                bodyFontColor: \"#000\",\n                bodyFontSize: 12,\n                bodyFontFamily: \"Jost\",\n                displayColors: false,\n                xPadding: 13,\n                yPadding: 13,\n                cornerRadius: 0,\n              },\n              legend: { display: false },\n              scales: {\n                xAxes: [\n                  {\n                    ticks: {\n                      display: true,\n                      drawBorder: false,\n                      fontSize: 12,\n                      padding: 10,\n                      fontFamily: \"Jost\",\n                    },\n                    gridLines: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                  },\n                ],\n                yAxes: [\n                  {\n                    ticks: {\n                      display: true,\n                      padding: 10,\n                      fontSize: 12,\n                      callback: function (value, index, values) {\n                        if (value > 5000) {\n                          return \"\";\n                        } else {\n                          return value / 1000 + \" тыс. ₽\";\n                        }\n                      },\n                      maxTicksLimit: 10,\n                      stepSize: 1000,\n                      fontFamily: \"Jost\",\n                    },\n                    gridLines: {\n                      display: true,\n                      drawBorder: false,\n                      z: -100,\n                    },\n                  },\n                ],\n              },\n            }}\n          >\n            {\" \"}\n          </Line>\n        </GraphContainer>\n      </Container>\n    </MainContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}